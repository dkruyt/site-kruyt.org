<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>email on Dennis Kruyt</title>
    <link>https://kruyt.org/categories/email/</link>
    <description>Recent content in email on Dennis Kruyt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Oct 2020 13:51:21 +0000</lastBuildDate><atom:link href="https://kruyt.org/categories/email/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running a mailserver in Kubernetes</title>
      <link>https://kruyt.org/running-a-mailserver-in-kubernetes/</link>
      <pubDate>Mon, 19 Oct 2020 13:51:21 +0000</pubDate>
      
      <guid>https://kruyt.org/running-a-mailserver-in-kubernetes/</guid>
      <description>Running a webserver in Kubernetes is easy, but a mailserver is more challenging. Most of the challenging things has todo with your ip infrastructure, ingress and loadbalancer within Kubernetes. Here are things I learned when I was deploying a mailserver based on Postfix on Kubernetes with metallb and nginx ingress. If you have a different setup, things could apply or not.
Prevent mail loops on your secondary MX Your postfix MX pod is running maybe on a private ip RFC1918, this is fine.</description>
    </item>
    
    <item>
      <title>Instagram/Facebook HELO/SPF fail</title>
      <link>https://kruyt.org/instragram-mail-server/</link>
      <pubDate>Fri, 13 Sep 2019 03:36:21 +0000</pubDate>
      
      <guid>https://kruyt.org/instragram-mail-server/</guid>
      <description>I am trying to get an email from instagram, but I wasn&amp;rsquo;t receiving it. Upon checking my mail logs I see the following log message.
Sep 13 03:50:51 mailserver postfix/smtpd[28105]: NOQUEUE: reject: RCPT from 66-220-155-156.mail-mail.facebook.com[66.220.155.156]: 550 5.7.1 &amp;lt;dennis@kruyt.org&amp;gt;: Recipient address rejected: Message rejected due to: domain owner discourages use of this host. Please see http://www.openspf.net/Why?s=helo;id=mx-out.facebook.com;ip=66.220.155.156;r=dennis@kruyt.org; from=&amp;lt;security@mail.instagram.com&amp;gt; to=&amp;lt;dennis@kruyt.org&amp;gt; proto=ESMTP helo=&amp;lt;mx-out.facebook.com&amp;gt; So the mail is SPF (Sender Policy Framework) failing. Email domains use this protocol to specify which mail hosts are authorised to use this domain in the SMTP HELO and MAIL FROM commands.</description>
    </item>
    
    <item>
      <title>Postfix and TLS encryption</title>
      <link>https://kruyt.org/postfix-and-tls-encryption/</link>
      <pubDate>Fri, 04 Aug 2017 19:05:26 +0000</pubDate>
      
      <guid>https://kruyt.org/postfix-and-tls-encryption/</guid>
      <description>With hackers around every corner, governments wants to read your emails, now a days encryption is a necessity. Now most major sites are only available on https, and more and more IM are using encryption. But what about and old protocol email that is still very popular and we cant go without it any more. How can we increase security for this?
Of course you can use S/MIME or PGP and have end to end encryption, but the problem that in transit between mail servers the from, to, cc, and subject fields are not encrypted.</description>
    </item>
    
  </channel>
</rss>
